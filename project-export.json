{
  "exportDate": "2025-08-01T17:23:11.729Z",
  "structure": "📁 client\n  📁 public\n    📄 index.html\n  📁 src\n    📁 context\n      📁 department\n        📄 DepartmentContext.js\n        📄 DepartmentState.js\n      📁 year\n        📄 YearContext.js\n        📄 YearState.js\n    📁 Department\n      📄 Department.js\n    📁 finance\n      📁 Department\n        📄 Department.css\n        📄 Department.js\n      📁 Home\n        📄 Home.js\n      📁 Navbar\n        📄 Navbar.js\n      📄 Finance.js\n    📁 Login\n      📄 Login.js\n    📄 App.js\n📁 middlewares\n  📄 authMiddleware.js\n📁 server\n  📁 controllers\n    📄 adminController.js\n    📄 budgetController.js\n    📄 userControllers.js\n  📁 models\n    📄 consumable.js\n    📄 equipment.js\n    📄 User.js\n  📁 routes\n    📄 adminRoutes.js\n    📄 budgetRoutes.js\n    📄 userRoutes.js\n  📄 db.js\n  📄 index.js\n  📄 package.json\n📄 .DS_Store\n📄 .gitignore",
  "files": [
    {
      "path": ".DS_Store",
      "content": "\u0000\u0000\u0000\u0001Bud1\u0000\u0000\u0010\u0000\u0000\u0000\b\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0002\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\b\u0000\u0000\u0000\b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0001\u0000\u0000\u0010\u0000lg1Scomp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\f\u0000\u0000\u0000\u0004\u0000.\u0000g\u0000i\u0000tlg1Scomp\u0000\u0000\u0000\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0004\u0000.\u0000g\u0000i\u0000tmoDDblob\u0000\u0000\u0000\bh\u0006\bA�\u001c�A\u0000\u0000\u0000\u0004\u0000.\u0000g\u0000i\u0000tmodDblob\u0000\u0000\u0000\bh\u0006\bA�\u001c�A\u0000\u0000\u0000\u0004\u0000.\u0000g\u0000i\u0000tph1Scomp\u0000\u0000\u0000\u0000\u0000\u00030\u0000\u0000\u0000\u0000\u000b\u0000m\u0000i\u0000d\u0000d\u0000l\u0000e\u0000w\u0000a\u0000r\u0000e\u0000slg1Scomp\u0000\u0000\u0000\u0000\u0000\u0000\u0001�\u0000\u0000\u0000\u000b\u0000m\u0000i\u0000d\u0000d\u0000l\u0000e\u0000w\u0000a\u0000r\u0000e\u0000smoDDblob\u0000\u0000\u0000\b\u0011\u0019b��\u001c�A\u0000\u0000\u0000\u000b\u0000m\u0000i\u0000d\u0000d\u0000l\u0000e\u0000w\u0000a\u0000r\u0000e\u0000smodDblob\u0000\u0000\u0000\b\u0011\u0019b��\u001c�A\u0000\u0000\u0000\u000b\u0000m\u0000i\u0000d\u0000d\u0000l\u0000e\u0000w\u0000a\u0000r\u0000e\u0000sph1Scomp\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0006\u0000s\u0000e\u0000r\u0000v\u0000e\u0000rlg1Scomp\u0000\u0000\u0000\u0000\u0000\u0000\u0005�\u0000\u0000\u0000\u0006\u0000s\u0000e\u0000r\u0000v\u0000e\u0000rmoDDblob\u0000\u0000\u0000\b�dO�\u001c�A\u0000\u0000\u0000\u0006\u0000s\u0000e\u0000r\u0000v\u0000e\u0000rmodDblob\u0000\u0000\u0000\b�dO�\u001c�A\u0000\u0000\u0000\u0006\u0000s\u0000e\u0000r\u0000v\u0000e\u0000rph1Scomp\u0000\u0000\u0000\u0000\u0000\u00000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\b\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000\u0000\u0000@\u0000\u0000\u0000\u0001\u0000\u0000\u0000�\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0010\u0000\u0000\u0000\u0000\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0001\u0000\u0000@\u0000\u0000\u0000\u0000\u0001\u0000\u0000�\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0001\u0000\b\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0001\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000@\u0000\u0000\u0000\u0000\u0000\u0001\u0000�\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0001\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001 \u0000\u0000\u0000\u0000\u0000\u0000\u0001@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u000b\u0000\u0000\u0000E\u0000\u0000\u0002\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0004DSDB\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000 \u0000\u0000\u0000`\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000�\u0000\u0000\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0002\u0000\u0000\b\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000 \u0000\u0000\u0000\u0000\u0001\u0000\u0000@\u0000\u0000\u0000\u0000\u0001\u0000\u0000�\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0001\u0000\b\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000\u0000\u0000\u0001\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000@\u0000\u0000\u0000\u0000\u0000\u0001\u0000�\u0000\u0000\u0000\u0000\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0001\b\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0001 \u0000\u0000\u0000\u0000\u0000\u0000\u0001@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000",
      "language": "",
      "size": 6148,
      "lastModified": "2025-08-01T17:23:09.080Z"
    },
    {
      "path": ".gitignore",
      "content": "",
      "language": "",
      "size": 0,
      "lastModified": "2025-07-29T15:32:12.898Z"
    },
    {
      "path": "client/public/index.html",
      "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n\n    <title>IITI Budget Allocation</title>\n    <link\n      href=\"https://www.iiti.ac.in/public/themes/iitindore/fonts/awesome/css/font-awesome.min.css\"\n      rel=\"stylesheet\"\n    />\n    <link\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\n      rel=\"stylesheet\"\n      integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\"\n      crossorigin=\"anonymous\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://unpkg.com/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\n    />\n\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/ist/css/bootstrap.min.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css\"\n      integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n      crossorigin=\"anonymous\"\n    />\n\n    </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n\n    <script\n      src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"\n      integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\"\n      crossorigin=\"anonymous\"\n    ></script>\n  </body>\n</html>",
      "language": "html",
      "size": 1875,
      "lastModified": "2025-07-31T19:22:56.104Z"
    },
    {
      "path": "client/src/App.js",
      "content": "import AlertState from \"./contexts/alert/AlertState\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Departments from \"./context/department/Departments\";\nimport Finance from \"./finance/Finance\";\nimport Home from \"./finance/Home/Home\";\nimport YearState from \"./contexts/year/YearState\";\nimport DepartmentState from \"./contexts/department/DepartmentState\";\nimport Department from \"./finance/Department/Department\";\n\n\nfunction App() {\n  return (\n    <>\n      <AlertState>\n        <YearState>\n          <DepartmentState>\n            <ToastContainer\n              position=\"top-right\"\n              autoClose={5000}\n              style={{ fontSize: \"1em\" }}\n              hideProgressBar={false}\n              newestOnTop={false}\n              closeOnClick\n              rtl={false}\n              pauseOnFocusLoss\n              draggable\n              pauseOnHover\n              theme=\"colored\"\n            />\n            <Router>\n              <Routes>\n                <Route exact path=\"/\" element={<Login />} />\n                <Route exact path=\"/dept\" element={<Departments />} />\n                <Route exact path=\"/finance/\" element={<Finance />}>\n                  <Route path=\"\" element={<Home />} />\n                  <Route path=\"dept\" element={<Department />} />\n                </Route>\n              </Routes>\n            </Router>\n          </DepartmentState>\n        </YearState>\n      </AlertState>\n    </>\n  );\n\n  }\n\nexport default App;",
      "language": "javascript",
      "size": 1506,
      "lastModified": "2025-07-31T19:32:38.251Z"
    },
    {
      "path": "client/src/Department/Department.js",
      "content": "import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport React from \"react\";\nimport Navbar from \"./Navbar/Navbar\";\nimport Home from \"./Home/Home\";\n\n\nconst Departments = () => {\n  return (\n    <>\n      <Navbar />\n\n      Hello from Deparment page.\n    </>\n  );\n};\n\nexport default Departments;",
      "language": "javascript",
      "size": 315,
      "lastModified": "2025-07-31T19:35:22.899Z"
    },
    {
      "path": "client/src/Login/Login.js",
      "content": "import React, { useContext, useState } from \"react\";\nimport AlertContext from \"../contexts/alert/AlertContext\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport finImage from \"../assets/images/finance.webp\";\nimport logo from \"../assets/images/iitindorelogo.png\";\n\nconst Login = () => {\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const { successful, unSuccessful } = useContext(AlertContext);\n  const navigate = useNavigate();\n  const handleOnChange = async (e) => {\n    const { name, value } = e.target;\n    setCredentials({ ...credentials, [name]: value });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\n      `http://${process.env.REACT_APP_API_HOST}:${process.env.REACT_APP_API_PORT}/api/user/login`,\n      {\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify(credentials),\n      }\n    );\n    const json = await response.json();\n\n    if (json.error) unSuccessful(json.error);\n    else {\n        localStorage.setItem(\"authToken\", json.authToken);\n      console.log(localStorage.getItem(\"authToken\"));\n      successful(\"You have been logged in succefully.\");\n      setTimeout(() => {\n        if (!json.user.role) navigate(\"/dept\");\n         else navigate(\"/finance\");\n        window.location.reload();\n      }, 3000);\n    }\n  };\n\n  return (\n    <>\n      <section className=\"bg-light p-3 p-md-4 p-xl-5\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-12 col-xxl-11\">\n              <div className=\"card border-light-subtle shadow-sm\">\n                <div className=\"row g-0\">\n                  <div className=\"col-12 col-md-6\">\n                    <img\n                      className=\"img-fluid rounded-start w-100 h-100 object-fit-cover\"\n                      loading=\"lazy\"\n                      src={finImage}\n                      alt=\"Finance Image\"\n                    />\n                  </div>\n                  <div className=\"col-12 col-md-6 d-flex align-items-center justify-content-center\">\n                    <div className=\"col-12 col-lg-11 col-xl-10\">\n                      <div className=\"card-body p-3 p-md-4 p-xl-5\">\n                        <div className=\"row\">\n                          <div className=\"col-12\">\n                            <div className=\"mb-5\">\n                              <div className=\"text-center mb-4\">\n                                <Link to=\"/\">\n                                  <img src={logo} alt=\"IITI Logo\" width=\"70\" />\n                                </Link>\n                              </div>\n                              <h4 className=\"text-center\">Welcome User !</h4>\n                              <p className=\"text-center\">\n                                Enter your login credentials\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row\"></div>\n                        <form onSubmit={handleSubmit}>\n                          <div className=\"row gy-3 overflow-hidden\">\n                            <div className=\"col-12\">\n                              <div className=\"form-floating mb-3\">\n                                <input\n                                  className=\"form-control\"\n                                  name=\"username\"\n                                  id=\"username\"\n                                  placeholder=\"Username\"\n                                  onChange={handleOnChange}\n                                  value={credentials.username}\n                                  required\n                                />\n                                <label\n                                  htmlFor=\"username\"\n                                  className=\"form-label\"\n                                >\n                                  Username\n                                </label>\n                              </div>\n                            </div>\n                            <div className=\"col-12\">\n                              <div className=\"form-floating mb-3\">\n                                <input\n                                  type=\"password\"\n                                  className=\"form-control\"\n                                  name=\"password\"\n                                  id=\"password\"\n                                  value={credentials.password}\n                                  placeholder=\"Password\"\n                                  onChange={handleOnChange}\n                                  required\n                                />\n                                <label\n                                  htmlFor=\"password\"\n                                  className=\"form-label\"\n                                >\n                                  Password\n                                </label>\n                              </div>\n                            </div>\n                            <div className=\"col-12\">\n                              <div className=\"d-grid\">\n                                <button\n                                  className=\"btn btn-dark btn-lg\"\n                                  type=\"submit\"\n                                >\n                                  Log In\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Login;",
      "language": "javascript",
      "size": 5839,
      "lastModified": "2025-07-31T19:27:32.232Z"
    },
    {
      "path": "client/src/context/department/DepartmentContext.js",
      "content": "import { createContext } from \"react\";\n\nconst DepartmentContext = createContext();\n\nexport default DepartmentContext;",
      "language": "javascript",
      "size": 117,
      "lastModified": "2025-07-31T19:27:56.834Z"
    },
    {
      "path": "client/src/context/department/DepartmentState.js",
      "content": "import React, { useEffect, useState } from \"react\";\nimport DepartmentContext from \"./DepartmentContext\";\n\nconst DepartmentState = (props) => {\n  const [department, setDepartment] = useState(() => {\n    const storedData = localStorage.getItem(\"department\");\n    return storedData ? JSON.parse(storedData) : {};\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"department\", JSON.stringify(department));\n  }, [department]);\n\n  return (\n    <DepartmentContext.Provider value={{ department, setDepartment }}>\n      {props.children}\n    </DepartmentContext.Provider>\n  );\n};\n\nexport default DepartmentState;",
      "language": "javascript",
      "size": 605,
      "lastModified": "2025-07-31T20:05:39.205Z"
    },
    {
      "path": "client/src/context/year/YearContext.js",
      "content": "",
      "language": "javascript",
      "size": 0,
      "lastModified": "2025-07-31T19:33:41.713Z"
    },
    {
      "path": "client/src/context/year/YearState.js",
      "content": "import React, { useState } from \"react\";\nimport YearContext from \"./YearContext\";\n\nconst YearState = (props) => {\n  const curDate = new Date();\n  const curYear = curDate.getFullYear();\n  const curMonth = curDate.getMonth();\n  const [year, setYear] = useState(curMonth < 3 ? curYear - 1 : curYear);\n\n  return (\n    <YearContext.Provider value={{ year, setYear }}>\n      {props.children}\n    </YearContext.Provider>\n  );\n};\n\nexport default YearState;",
      "language": "javascript",
      "size": 448,
      "lastModified": "2025-07-31T19:34:13.642Z"
    },
    {
      "path": "client/src/finance/Department/Department.css",
      "content": "table {\n    border-collapse: collapse;\n    width: 100%;\n  }\n  th, td {\n    border: 1px solid black;\n    padding: 8px;\n    text-align: left;\n  }\n  th {\n    background-color: #f2f2f2;\n  }",
      "language": "css",
      "size": 185,
      "lastModified": "2025-07-31T20:07:08.069Z"
    },
    {
      "path": "client/src/finance/Department/Department.js",
      "content": "import React, { useContext, useEffect, useState} from \"react\";\nimport DepartmentContext from \"../../contexts/department/DepartmentContext\";\nimport \"./department.css\";\nimport YearContext from \"../../contexts/year/YearContext\";\nimport AlertContext from \"../../contexts/alert/AlertContext\";\n\nconst Department = () => {\n  const { department } = useContext(DepartmentContext);\n  const { year } = useContext(YearContext);\n  const { unSuccessful } = useContext(AlertContext);\n  const { name, budget, expenditure, username, type } = department;\n  const initialIndents = {\n    inProcess: [],\n    directPur: [],\n    payDone: [],\n  };\n  const [indents, setIndents] = useState(initialIndents);\n  const initialTotal = {\n    inProcess: { amount: 0, indAmount: 0 },\n    directPur: { amount: 0, indAmount: 0 },\n    payDone: { amount: 0, indAmount: 0 },\n  };\n  const [total, setTotal] = useState(initialTotal);\n\n  const fetchData = async () => {\n    const response = await fetch(\n     `http://${process.env.REACT_APP_API_HOST}:${process.env.REACT_APP_API_PORT}/api/budget/fetchtable?username=${username}&type=${type}&year=${year}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"auth-token\": localStorage.getItem(\"authToken\"),\n        },\n      }\n    );\n    const json = await response.json();\n  };\n\n  if (json.error) {\n      unSuccessful(json.error);\n      setIndents(initialIndents);\n      setTotal(initialTotal);\n    } else {\n      const { indents_process, direct_purchase, indent_pay_done } = json;\n      let inProcess = { amount: 0, indAmount: 0 };\n      indents_process.map((indent) => {\n        inProcess.amount += indent.amount;\n        inProcess.indAmount += indent.indent_amount;\n      });\n      let payDone = { amount: 0, indAmount: 0 };\n      indent_pay_done.map((indent) => {\n        payDone.amount += indent.amount;\n        payDone.indAmount += indent.indent_amount;\n      });\n      let directPur = { amount: 0, indAmount: 0 };\n      direct_purchase.map((indent) => {\n        directPur.amount += indent.amount;\n        directPur.indAmount += indent.indent_amount;\n      });\n      setIndents({\n        inProcess: indents_process,\n        directPur: direct_purchase,\n        payDone: indent_pay_done,\n      });\n      setTotal({ inProcess, payDone, directPur });\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [year]);\n\n  return (\n    <>\n      <h2 className=\"m-3 text-center\">{name}</h2>\n      <h3 className=\"m-3 text-center\">\n        {type ? \"Equipment\" : \"Consumable\"} Budget {year}-{(year % 100) + 1}\n      </h3>\n      <table>\n        <thead>\n          <tr>\n           <th colSpan=\"2\">Budget (Rs.)</th>\n            <th colSpan=\"3\">Expenditure</th>\n            <th colSpan=\"3\">Fund Available</th>\n            <th colSpan=\"2\">Percent Utilised</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n         <td colSpan=\"2\">{budget}</td>\n            <td colSpan=\"3\">{expenditure}</td>\n            <td colSpan=\"3\">{budget - expenditure}</td>\n            <td colSpan=\"2\">{((expenditure / budget) * 100).toFixed(2)}%</td>\n          </tr>\n          <tr>\n            <th colspan={10} className=\"text-center\">\n              <h4>Indents in Process</h4>\n            </th>\n          </tr>\n          <tr>\n            <th>Sr. No.</th>\n            <th>Entry Date</th>\n            <th>Particulars</th>\n            <th>Year</th>\n            <th>Indenter</th>\n            <th>Indent No.</th>\n            <th>PO No.</th>\n            <th>Indent Amount</th>\n            <th>Amount (₹)</th>\n            <th>Account Head</th>\n          </tr>\n          {indents.inProcess.map((indent, i) => {\n            const {\n              entry_date,\n              particulars,\n              indenter,\n              indent_no,\n              po_no,\n              indent_amount,\n              amount,\n              account_head,\n            } = indent;\n            const date = new Date(entry_date).toDateString();\n            return (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{date}</td>\n                <td>{particulars}</td>\n                <td>\n                  {year}-{(year % 100) + 1}\n                </td>\n                <td>{indenter}</td>\n                <td>{indent_no}</td>\n                <td>{po_no}</td>\n                <td>{indent_amount}</td>\n                <td>{amount}</td>\n                <td>{account_head}</td>\n              </tr>\n            );\n          })}\n\n          <tr>\n            <td colSpan=\"7\" className=\"font-weight-bold\">\n              Total\n            </td>\n            <td>{total.inProcess.indAmount}</td>\n            <td>{total.inProcess.amount}</td>\n            <td></td>\n            <th colspan=\"10\">\n              <h4 className=\"text-center\">Indent payment done</h4>\n            </th>\n          </tr>\n          <tr>\n            <th>Sr. No.</th>\n            <th>Entry Date</th>\n            <th>Particulars</th>\n            <th>Year</th>\n            <th>Indenter</th>\n            <th>Indent No.</th>\n            <th>PO No.</th>\n            <th>Indent Amount</th>\n            <th>Amount (₹)</th>\n            <th>Account Head</th>\n          </tr>\n\n           {indents.inProcess.map((indent, i) => {\n            const {\n              entry_date,\n              particulars,\n              indenter,\n              indent_no,\n              po_no,\n              indent_amount,\n              amount,\n              account_head,\n            } = indent;\n            const date = new Date(entry_date).toDateString();\n            return (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{date}</td>\n                <td>{particulars}</td>\n                <td>\n                  {year}-{(year % 100) + 1}\n                </td>\n                <td>{indenter}</td>\n                <td>{indent_no}</td>\n                <td>{po_no}</td>\n                <td>{indent_amount}</td>\n                <td>{amount}</td>\n                <td>{account_head}</td>\n              </tr>\n            );\n          })}\n\n          <tr>\n             <td colSpan=\"7\" className=\"font-weight-bold\">\n              Total\n            </td>\n            <td>{total.inProcess.indAmount}</td>\n            <td>{total.inProcess.amount}</td>\n            <td></td>\n          </tr>\n          <tr>\n            <th colspan=\"10\">\n              <h4 className=\"text-center\">Direct purchase</h4>\n            </th>\n          </tr>\n          <tr>\n            <th>Sr. No.</th>\n            <th>Entry Date</th>\n            <th>Particulars</th>\n            <th>Year</th>\n            <th>Indenter</th>\n            <th>Indent No.</th>\n            <th>PO No.</th>\n            <th>Indent Amount</th>\n            <th>Amount (₹)</th>\n            <th>Account Head</th>\n          </tr>\n          {indents.directPur.map((indent, i) => {\n            const {\n              entry_date,\n              particulars,\n              indenter,\n              indent_no,\n              po_no,\n              indent_amount,\n              amount,\n              account_head,\n            } = indent;\n            const date = new Date(entry_date).toDateString();\n            return (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{date}</td>\n                <td>{particulars}</td>\n                <td>\n                  {year}-{(year % 100) + 1}\n                </td>\n                <td>{indenter}</td>\n                <td>{indent_no}</td>\n                <td>{po_no}</td>\n                <td>{indent_amount}</td>\n                <td>{amount}</td>\n                <td>{account_head}</td>\n              </tr>\n            );\n          })}\n\n          <tr>\n            <td colSpan=\"7\" className=\"font-weight-bold\">\n              Total\n            </td>\n            <td>{total.directPur.indAmount}</td>\n            <td>{total.directPur.amount}</td>\n            <td></td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n  \n\nexport default Department;",
      "language": "javascript",
      "size": 7911,
      "lastModified": "2025-08-01T16:50:29.257Z"
    },
    {
      "path": "client/src/finance/Finance.js",
      "content": "import React from \"react\";\nimport Navbar from \"./Navbar/Navbar\";\nimport { Outlet } from \"react-router-dom\";\n\nconst Finance = () => {\n\n  return (\n    <>\n      <Navbar/>\n      <Outlet />\n    </>\n  );\n};\n\nexport default Finance;",
      "language": "javascript",
      "size": 225,
      "lastModified": "2025-07-31T19:38:01.106Z"
    },
    {
      "path": "client/src/finance/Home/Home.js",
      "content": "import React, { useContext, useEffect, useState } from \"react\";\nimport YearContext from \"../../contexts/year/YearContext\";\nimport AlertContext from \"../../contexts/alert/AlertContext\";\nimport DepartmentContext from \"../../contexts/department/DepartmentContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Home = () => {\n  const { unSuccessful } = useContext(AlertContext);\n  const { year } = useContext(YearContext);\n  const { setDepartment } = useContext(DepartmentContext);\n  const [equipment, setEquipment] = useState([]);\n  const [consumable, setConsumable] = useState([]);\n  const navigate = useNavigate();\n\n  const fetchSummary = async () => {\n    const response = await fetch(\n      `http://${process.env.REACT_APP_API_HOST}:${process.env.REACT_APP_API_PORT}/api/budget/fetchsummary?year=${year}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"auth-token\": localStorage.getItem(\"authToken\"),\n        },\n      }\n    );\n    const json = await response.json();\n    if (json.error) unSuccessful(json.error);\n    else {\n      setConsumable(json.con_result);\n      setEquipment(json.eq_result);\n    }\n  };\n\n  const handleClick = (dept, type) => {\n    setDepartment({ ...dept, type });\n    navigate(\"/finance/dept\");\n  };\n\n  useEffect(() => {\n    fetchSummary();\n  }, [year]);\n\n  return (\n\n    <div>\n      <div className=\"container centered-div2\">\n        <h1 className=\"text-center\">\n          <b className=\"w3-large\">\n            Year {year}-{(year % 100) + 1}\n          </b>\n        </h1>\n      </div>\n      <div className=\"container table-container\">\n        {/* Add button at the leftmost top corner of the table */}\n        {/* <button type=\"button\" class=\"btn btn-success\" id=\"addButton\">Add</button> */}\n        {/* Sort by dropdowns at the top-right corner of the table */}\n        {/* <div id=\"sortDropdowns\">\n          <div className=\"btn-group\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary dropdown-toggle\"\n              data-toggle=\"dropdown\"\n            >\n              Sort by\n            </button>\n            <div className=\"dropdown-menu\">\n              <a className=\"dropdown-item\" href=\"#\">\n                Department\n              </a>\n              <a className=\"dropdown-item\" href=\"#\">\n                %utilized\n              </a>\n            </div>\n          </div>\n        </div> */}\n        {/* <div id=\"downloadDropdowns\">\n          <div id=\"download\">\n            <div className=\"btn-group\">\n              <button\n                type=\"button\"\n                className=\"btn btn-primary dropdown-toggle\"\n                data-toggle=\"dropdown\"\n              >\n                Download\n              </button>\n              <div className=\"dropdown-menu\">\n                <a className=\"dropdown-item\" href=\"#\">\n                  As PDF\n                </a>\n                <a className=\"dropdown-item\" href=\"#\">\n                  As EXCEL SHEET\n                </a>\n              </div>\n            </div>\n          </div>\n        </div> */}\n        {/* Search bar */}\n        {/* <div\n          className=\"input-group mb-3\"\n          id=\"searchBar\"\n          style={{ maxWidth: 300 }}\n        >\n          <input type=\"text\" className=\"form-control\" placeholder=\"Search\" />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-outline-secondary\" type=\"button\">\n              Search\n            </button>\n          </div>\n        </div> */}\n        {/* <div class=\"d-flex justify-content-end\">\n<button type=\"button\" class=\"btn btn-success mr-2\">Add</button>\n<button type=\"button\" class=\"btn btn-primary mr-2\">Filter</button>\n<button type=\"button\" class=\"btn btn-info\">Sort</button>\n    </div> */}\n      </div>\n      <div className=\"container table-container\">\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <td colSpan={8} className=\"text-center\">\n                <h3>Equipment Budget</h3>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Department</th>\n              <th scope=\"col\">Budget Allocated</th>\n              <th scope=\"col\">Actual Expenditure</th>\n              <th scope=\"col\">Indents in Process</th>\n              <th scope=\"col\">Fund Available</th>\n              <th scope=\"col\">% Utilized</th>\n              <th scope=\"col\">Remark</th>\n            </tr>\n          </thead>\n          <tbody>\n            {equipment.length ? (\n              equipment.map((eq, i) => {\n                const { name, budget, expenditure } = eq;\n                return (\n                  <tr onClick={() => handleClick(eq, 1)} role=\"button\" id = {i}>\n                    <td>{i + 1}</td>\n                    <td>{name}</td>\n                    <td>{budget}</td>\n                    <td>{expenditure}</td>\n                    <td>81.71</td>\n                    <td>{budget - expenditure}</td>\n                    <td>{((expenditure / budget) * 100).toFixed(2)}%</td>\n                    <td>None</td>\n                  </tr>\n                );\n              })\n            ) : (\n              <tr>\n                <td colSpan={8} className=\"text-center\">\n                  No Data\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      <br />\n       <div className=\"container table-container\">\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <td colSpan={8} className=\"text-center\">\n                <h3>Consumable Budget</h3>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Department</th>\n              <th scope=\"col\">Budget Allocated</th>\n              <th scope=\"col\">Actual Expenditure</th>\n              <th scope=\"col\">Indents in Process</th>\n              <th scope=\"col\">Fund Available</th>\n              <th scope=\"col\">% Utilized</th>\n              <th scope=\"col\">Remark</th>\n            </tr>\n          </thead>\n          <tbody>\n            {consumable.length ? (\n              consumable.map((con, i) => {\n                const { name, budget, expenditure } = con;\n                return (\n                  <tr onClick={() => handleClick(con, 0)} role=\"button\">\n                    <td>{i + 1}</td>\n                    <td>{name}</td>\n                    <td>{budget}</td>\n                    <td>{expenditure}</td>\n                    <td>81.71</td>\n                    <td>{budget - expenditure}</td>\n                     <td>{((expenditure / budget) * 100).toFixed(2)}%</td>\n                    <td>None</td>\n                  </tr>\n                );\n              })\n            ) : (\n              <tr>\n                <td colSpan={8} className=\"text-center\">\n                  No Data\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;",
      "language": "javascript",
      "size": 6985,
      "lastModified": "2025-08-01T16:54:50.175Z"
    },
    {
      "path": "client/src/finance/Navbar/Navbar.js",
      "content": "import React, { useContext, useEffect, useState } from \"react\";\nimport \"./navbar.css\";\nimport logo from \"../../assets/images/iitindorelogo.png\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport YearContext from \"../../contexts/year/YearContext\";\n\nconst Navbar = () => {\n  const navigate = useNavigate();\n  const [years, setYears] = useState([]);\n  const { setYear } = useContext(YearContext);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"authToken\")) navigate(\"/\");\n    let curYears = [];\n    for (let index = 2021; index <= new Date().getFullYear(); index++) {\n      curYears.push(index);\n    }\n    setYears(curYears);\n  }, []);\n\n  const logOut = () => {\n    localStorage.clear(\"authToken\");\n    navigate(\"/\");\n  };\n\n  const changeYear = (i) => {\n    setYear(i);\n  };\n\n  return (\n    <>\n      \n      <header>\n        <nav className=\"navbar navbar-expand-lg custom-navbar\">\n          <div className=\"container-fluid\">\n            <div className=\"container2\">\n              <Link className=\"navbar-brand\" to=\"/finance\">\n                <img\n                  src={logo}\n                  alt=\"Logo\"\n                  width=\"60\"\n                  className=\"d-inline-block align-text-top\"\n                />\n              </Link>\n              <h5 className=\"nav-title\">Budget Allocation IIT Indore</h5>\n            </div>\n\n            <div className=\"justify-content-between\">\n              <button\n                className=\"navbar-toggler\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"/navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n              >\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div\n                className=\"collapse navbar-collapse\"\n                id=\"navbarSupportedContent\"\n              >\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                  <li className=\"nav-item\">\n                    <Link\n                      className=\"nav-link active\"\n                      aria-current=\"page\"\n                      to=\"/finance\"\n                    >\n                      Home |\n                    </Link>\n                  </li>\n                  <li className=\"nav-item dropdown\">\n                    <Link\n                      className=\"nav-link dropdown-toggle\"\n                      to=\"/\"\n                      role=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      Change Year\n                    </Link>\n                    <ul className=\"dropdown-menu\">\n                      {years.map((year, i) => {\n                        return (\n                          <li\n                            role=\"button\"\n                            className=\"dropdown-item\"\n                            key={i}\n                            onClick={() => changeYear(year)}\n                          >\n                            {year}-{(year % 100) + 1}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </li>\n                  <li className=\"nav-item dropdown\">\n                    <Link\n                      className=\"nav-link dropdown-toggle\"\n                      to=\"/\"\n                      role=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      Manage Users\n                    </Link>\n                    <ul className=\"dropdown-menu\">\n                      <li>\n                        <Link className=\"dropdown-item\" to=\"/\">\n                          Add new dept\n                        </Link>\n                      </li>\n                      <li>\n                        <Link className=\"dropdown-item\" to=\"/\">\n                          Remove existing dept\n                        </Link>\n                      </li>\n                      <hr className=\"dropdown-divider\" />\n                      <li>\n                        <Link className=\"dropdown-item\" to=\"/\">\n                          Add new user\n                        </Link>\n                      </li>\n                      <li>\n                        <Link className=\"dropdown-item\" to=\"/\">\n                          Remove existing user\n                        </Link>\n                      </li>\n                    </ul>\n                  </li>\n                  <li className=\"nav-item dropdown\">\n                    <Link\n                      className=\"nav-link dropdown-toggle\"\n                      to=\"/\"\n                      role=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      Budget Controls\n                    </Link>\n                    <ul className=\"dropdown-menu\">\n                      <li>\n                        <Link className=\"dropdown-item\" to=\"/\">\n                          Increase Allocated Budget\n                        </Link>\n                      </li>\n                      <li>\n                        <Link className=\"dropdown-item\" to=\"/\">\n                          Reset Financial Year\n                        </Link>\n                      </li>\n                    </ul>\n                  </li>\n\n                  <li\n                    className=\"nav-item nav-link active\"\n                    role=\"button\"\n                    onClick={logOut}\n                  >\n                    Logout\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </header>\n    </>\n  );\n};\n\nexport default Navbar;",
      "language": "javascript",
      "size": 5851,
      "lastModified": "2025-07-31T19:45:33.957Z"
    },
    {
      "path": "middlewares/authMiddleware.js",
      "content": "import jwt from \"jsonwebtoken\";\nconst JWT_SECRET = \"SaintMSGInsan\";\n\nconst errorMessage = \"Please authenticate using a valid token!\";\n\nconst authMiddleware = (req, res, next) => {\n  const token = req.header(\"auth-token\");\n  if (!token) res.status(401).send({ error: errorMessage });\n  try {\n    const data = jwt.verify(token, JWT_SECRET);\n    req.user = data.user;\n    next();\n  } catch (err) {\n    res.status(401).send({ error: errorMessage });\n  }\n};\n\nexport default authMiddleware;",
      "language": "javascript",
      "size": 484,
      "lastModified": "2025-07-29T15:42:47.501Z"
    },
    {
      "path": "server/controllers/adminController.js",
      "content": "import User from \"../models/User.js\";\nimport { validationResult } from \"express-validator\";\nimport Consumable from \"../models/consumable.js\";\nimport Equipment from \"../models/equipment.js\";\nimport bcrypt from \"bcryptjs\";\n\nexport const createUser = async (req, res) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n  try {\n    let user = await User.findOne({ username: req.body.username });\n    if (user) {\n      return res.status(400).json({ error: \"Username already exists!\" });\n    }\n\n    const salt = await bcrypt.genSalt(10);\n    let secPass = await bcrypt.hash(req.body.password, salt);\n    const { username, name, role } = req.body;\n    user = await User.create({\n      username,\n      name,\n      password: secPass,\n      role,\n    });\n    res.json({ success: \"User has been created!\" });\n  } catch (err) {\n    console.error(err.message);\n    res.status(500).send({ error: \"Some error occured!\" });\n  }\n};\n\n//===============================================================================\n\nexport const addDept = async (req, res) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n  try {\n    const { username, name, password, budget, expenditure, in_process,year } = req.body;\n    let user = await User.findOne({ username });\n    if (user) {\n      return res.status(400).json({ error: \"Username already exists!\" });\n    }\n    let entry = await Consumable.create({\n      username,\n      department: name,\n      budget,\n      expenditure,\n      in_process,\n      year,\n      indents_process: [],\n      direct_purchase: [],\n      // indent_pay_done: [],\n    });\n    let entry2 = await Equipment.create({\n      username,\n      department: name,\n      budget,\n      expenditure,\n      in_process,\n      year,\n      indents_process: [],\n      direct_purchase: [],\n      // indent_pay_done: [],\n    });\n    const salt = await bcrypt.genSalt(10);\n    let secPass = await bcrypt.hash(password, salt);\n    const role = 0;\n    user = await User.create({\n      username,\n      name,\n      password: secPass,\n      role,\n    });\n    res.json({ success: \"Department has been created!\" });\n  } catch (err) {\n    console.error(err.message);\n    res.status(500).send(\"Some error occured!\");\n  }\n};\n\n\n//{     \"username\":\"mems2\",\n// \"password\":\"password\",\n// \"name\":\"MM 310\",\n// \"budget\":9000000,\n// \"expenditure\":3444440,\n// \"in_process\":0,\n// \"year\":2025\n// }",
      "language": "javascript",
      "size": 2524,
      "lastModified": "2025-08-01T17:08:03.024Z"
    },
    {
      "path": "server/controllers/budgetController.js",
      "content": "import Equipment from \"../models/equipment.js\";\nimport Consumable from \"../models/consumable.js\";\nimport User from \"../models/User.js\";\nimport { validationResult } from \"express-validator\";\n\nexport const addEntry = async (req, res) => {\n  try {\n    const { username, array_name, array_data } = req.body;\n    let table = await Consumable.findOne({username });\n    if (!table) {\n      return res.status(400).json({\n        error: \"Dept does not exist, contact Admin to add the department\",\n      });\n    }\n\n    if (array_name === \"indents_process\") {\n    const index = table.indents_process.findIndex(item => item.indent_no === array_data.indent_no);\n      console.log(index);\n      if(index===-1){\n        array_data.amount=array_data.indent_amount;\n        table.indents_process.push(array_data);\n        table.in_process=table.in_process+array_data.indent_amount;\n        \n        table.expenditure = table.expenditure + array_data.amount;\n      }\n      else{\n        table.indents_process[index].entry_date=array_data.entry_date;\n        table.indents_process[index].particulars=array_data.particulars;\n        table.indents_process[index].indenter=array_data.indenter;\n        table.indents_process[index].indent_no=array_data.indent_no;\n        table.indents_process[index].remark=array_data.remark;\n        table.indents_process[index].active=array_data.active;\n\n        if(!array_data.po_no){\n          const initial_indent_amount=table.indents_process[index].indent_amount\n          table.indents_process[index].indent_amount=array_data.indent_amount;\n          table.in_process=table.in_process-initial_indent_amount;\n          table.in_process=table.in_process+array_data.indent_amount;\n          if(array_data.amount)\n          table.indents_process[index].amount=array_data.amount;\n          else table.indents_process[index].amount=array_data.indent_amount;\n          const initial_amount=table.indents_process.amount\n          table.expenditure=table.expenditure-initial_amount;\n          table.expenditure=table.expenditure+array_data.amount;\n        }\n        else{\n          //set po number\n          table.indents_process[index].po_no=array_data.po_no;\n          console.log(array_data.po_no,table.indents_process[index].po_no)\n          //initial indent amount\n          // const initial_indent_amount=table.indents_process[index].indent_amount\n          // //editiing indent amount\n          // table.indents_process[index].indent_amount=array_data.indent_amount;\n          // //updating in_process amount by only adding the difference\n          // table.in_process=table.in_process-initial_indent_amount;\n          // table.in_process=table.in_process+array_data.indent_amount;\n\n\n          // if(!array_data.amount)array_data.amount=array_data.indent_amount;\n          // //handling expenditure\n          \n          // table.in_process=table.in_process-array_data.indent_amount;\n          const initial_amount=table.indents_process[index].amount;\n          table.expenditure=table.expenditure-initial_amount;\n          table.indents_process[index].amount=array_data.amount;\n          table.expenditure=table.expenditure+table.indents_process[index].amount;\n          \n        }\n       \n\n    } }\n    else if (array_name === \"direct_purchase\") {\n      const index = table.direct_purchase.findIndex(item => item.indent_no === array_data.indent_no);\n      if(index===-1){\n        table.direct_purchase.push(array_data);\n        table.expenditure = table.expenditure + array_data.amount;\n      }\n      else{\n        const init_amt=table.direct_purchase[index].amount;\n        table.direct_purchase[index].entry_date=array_data.entry_date;\n        table.direct_purchase[index].particulars=array_data.particulars;\n        table.direct_purchase[index].indenter=array_data.indenter;\n        table.direct_purchase[index].indent_no=array_data.indent_no;\n        table.direct_purchase[index].indent_amount=array_data.indent_amount;\n        table.direct_purchase[index].amount=array_data.amount;\n        table.direct_purchase[index].remark=array_data.remark;\n        table.direct_purchase[index].active=array_data.active;\n        table.expenditure = table.expenditure - init_amt;\n        table.expenditure = table.expenditure + array_data.amount;\n      }\n    } \n    // else if (array_name === \"indent_pay_done\") {\n    //   table.indent_pay_done.push(array_data);\n    //   table.expenditure = table.expenditure + array_data.amount;\n    // } \n    else {\n      return res.status(400).json({ error: \"wrong array name\" });\n    }\n    await table.save();\n\n     res.json({ message: \"successful entry\" });\n  } catch (err) {\n    console.error(err.message);\n    res.status(500).send(\"Some error occured!\");\n  }\n};\n\n\n\n//   \"department\":\"Department of Mems\",\n//   \"array_name\":\"indents_process\",\n//   \"array_data\":{\n//    \"entry_date\": null,\n//       \"particulars\": \"process\",\n//       \"indenter\": \"nano\",\n//       \"indent_no\": 1,\n//       \"po_no\": null,\n//       \"indent_amount\": 64528,\n//       \"amount\":null,\n//       \"nameofparty\":\"check check\",\n//         \"category\":\"software\",\n//       \"active\": true\n//   }\n// }\n//==========================================================================================\n\n\n// export const addequipmentdept =  async (req, res) => {\n//   const errors = validationResult(req);\n//   if (!errors.isEmpty()) {\n//     return res.status(400).json({ errors: errors.array() });\n//   }\n//   try {\n\n//     const { department,budget,expenditure,year,indents_process,direct_purchase,indent_pay_done } = req.body;\n//     const { department,budget,expenditure,year,indents_process,direct_purchase[index],indent_pay_done } = req.body;\n\n//     let entry = await Equipment.create({\n//       department,budget,expenditure,year,indents_process,direct_purchase,indent_pay_done\n//     });\n//     res.json({message:`successfully added department ${department}`});\n//   }\n//   catch (err) {\n//     console.error(err.message);\n//     res.status(500).send(\"Some error occured!\");\n//   }\n// }\n//sample request --\n// \"department\":\"CSE\",\n// \"budget\":9000000,\n// \"expenditure\":3444440,\n// \"year\":2022,\n// \"indents_process\":[],\n// \"direct_purchase\":[],\n// \"indent_pay_done\":[]\n//=============================================================================\n\n\n//adding indent entry in equipment\nexport const addEqEntry = async (req, res) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(404).json({ errors: errors.array() });\n  }\n  try {\n    const { username, array_name, array_data } = req.body;\n    let table = await Equipment.findOne({ username });\n    if (!table) {\n      return res.status(400).json({\n        error: \"Dept does not exist, contact Admin to add the department\",\n      });\n    }\n    if (array_name === \"indents_process\") {\n    const index = table.indents_process.findIndex(item => item.indent_no === array_data.indent_no);\n      console.log(index);\n      if(index===-1){\n        array_data.amount=array_data.indent_amount;\n        table.indents_process.push(array_data);\n        table.in_process=table.in_process+array_data.indent_amount;\n        \n        table.expenditure = table.expenditure + array_data.amount;\n      }\n      else{\n        table.indents_process[index].entry_date=array_data.entry_date;\n        table.indents_process[index].particulars=array_data.particulars;\n        table.indents_process[index].indenter=array_data.indenter;\n        table.indents_process[index].indent_no=array_data.indent_no;\n        table.indents_process[index].remark=array_data.remark;\n        table.indents_process[index].category=array_data.category;\n        table.indents_process[index].active=array_data.active;\n\n        if(!array_data.po_no){\n          const initial_indent_amount=table.indents_process[index].indent_amount\n          table.indents_process[index].indent_amount=array_data.indent_amount;\n          table.in_process=table.in_process-initial_indent_amount;\n          table.in_process=table.in_process+array_data.indent_amount;\n          if(array_data.amount)\n          table.indents_process[index].amount=array_data.amount;\n          else table.indents_process[index].amount=array_data.indent_amount;\n          const initial_amount=table.indents_process.amount\n          table.expenditure=table.expenditure-initial_amount;\n          table.expenditure=table.expenditure+array_data.amount;\n        }\n        else{\n          //set po number\n          table.indents_process[index].po_no=array_data.po_no;\n          console.log(array_data.po_no,table.indents_process[index].po_no)\n          //initial indent amount\n          // const initial_indent_amount=table.indents_process[index].indent_amount\n          // //editiing indent amount\n          // table.indents_process[index].indent_amount=array_data.indent_amount;\n          // //updating in_process amount by only adding the difference\n          // table.in_process=table.in_process-initial_indent_amount;\n          // table.in_process=table.in_process+array_data.indent_amount;\n\n\n          // if(!array_data.amount)array_data.amount=array_data.indent_amount;\n          // //handling expenditure\n          \n          // table.in_process=table.in_process-array_data.indent_amount;\n          const initial_amount=table.indents_process[index].amount;\n          table.expenditure=table.expenditure-initial_amount;\n          table.indents_process[index].amount=array_data.amount;\n          table.expenditure=table.expenditure+table.indents_process[index].amount;\n          \n        }\n       \n\n    } }\n    else if (array_name === \"direct_purchase\") {\n      const index = table.direct_purchase.findIndex(item => item.indent_no === array_data.indent_no);\n      if(index===-1){\n        table.direct_purchase.push(array_data);\n        table.expenditure = table.expenditure + array_data.amount;\n      }\n      else{\n        const init_amt=table.direct_purchase[index].amount;\n        table.direct_purchase[index].entry_date=array_data.entry_date;\n        table.direct_purchase[index].particulars=array_data.particulars;\n        table.direct_purchase[index].indenter=array_data.indenter;\n        table.direct_purchase[index].indent_no=array_data.indent_no;\n        table.direct_purchase[index].indent_amount=array_data.indent_amount;\n        table.direct_purchase[index].amount=array_data.amount;\n        table.direct_purchase[index].remark=array_data.remark;\n        table.direct_purchase[index].category=array_data.category;\n        table.direct_purchase[index].active=array_data.active;\n        table.expenditure = table.expenditure - init_amt;\n        table.expenditure = table.expenditure + array_data.amount;\n      }\n    } \n    // else if (array_name === \"indent_pay_done\") {\n    //   table.indent_pay_done.push(array_data);\n    //   table.expenditure = table.expenditure + array_data.amount;\n    // } \n    else {\n      return res.status(400).json({ error: \"wrong array name\" });\n    }\n    await table.save();\n    res.json({ message: \"successful entry\" });\n  } catch (err) {\n    console.error(err.message);\n    res.status(500).send(\"Some error occured!\");\n  }\n};\n//sample entry\n// {\n//   \"department\":\"CSE\",\n//   \"array_name\":\"indents_process\",\n//   \"array_data\":{\n//    \"entry_date\": null,\n//       \"particulars\": \"process\",\n//       \"indenter\": \"nano\",\n//       \"indent_no\": 1,\n//       \"po_no\": ,\n//      \"indent_amount\": 64528,\n//       \"amount\":,\n//       \"nameofparty\":\"check check\",\n//        \"category\":\"software\",\n//       \"active\": true\n//   }\n// }\n//==========================================================================================\n//fetching budget data\nexport const fetchTable = async (req, res) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(404).json({ errors: errors.array() });\n  }\n  try {\n    const { department_name, budget_type } = req.body;\n    if (budget_type == \"Equipment\") {\n      let table = await Equipment.findOne({ department: department_name });\n      if (!table) {\n        return res.status(400).json({\n          error: \"Dept does not exist, contact Admin to add the department\",\n        });\n      }\n      let {\n        expenditure,\n        year,\n        indents_process,\n        direct_purchase,\n        // indent_pay_done,\n        department,\n        budget,\n      } = table;\n      return res.json({\n        department: department,\n        budget: budget,\n        expenditure: expenditure,\n        year: year,\n        indents_process: indents_process,\n        direct_purchase: direct_purchase,\n        // indent_pay_done: indent_pay_done,\n      });\n    } else if (budget_type == \"Consumable\") {\n      let table = await Consumable.findOne({ department: department_name });\n      if (!table) {\n        return res.status(400).json({\n          error: \"Dept does not exist, contact Admin to add the department\",\n        });\n      }\n      let {\n        expenditure,\n        year,\n        indents_process,\n        direct_purchase,\n        // indent_pay_done,\n        department,\n        budget,\n      } = table;\n      return res.json({\n        department: department,\n        budget: budget,\n        expenditure: expenditure,\n        year: year,\n        indents_process: indents_process,\n        direct_purchase: direct_purchase,\n        // indent_pay_done: indent_pay_done,\n      });\n    }\n  } catch (err) {\n    console.error(err.message);\n    res.status(500).send(\"Some error occured!\");\n  }\n};\n\n// {\"department_name\":\"Department of MEMS\",\n// \"budget_type\":\"Equipment\"\n// }\n//==================================================\n\n//summary\nexport const fetchSummary = async (req, res) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(404).json({ errors: errors.array() });\n  }\n  const year = req.query.year;\n  try {\n    const con_departments = await Consumable.find({ year });\n    const con_result = [];\n    for (const con of con_departments) {\n      con_result.push({\n        //Indent calculation Remaining\n        username: con.username,\n        name: con.department,\n        budget: con.budget,\n        expenditure: con.expenditure,\n        in_process: con.in_process\n      });\n    }\n    const eq_departments = await Equipment.find({ year });\n    const eq_result = [];\n    for (const eq of eq_departments) {\n      eq_result.push({\n        username: eq.username,\n        name: eq.department,\n        budget: eq.budget,\n        expenditure: eq.expenditure,\n        in_process: eq.in_process\n      });\n    }\n    return res.json({ con_result, eq_result });\n  } catch (err) {\n    console.error(err.message);\n    res.status(500).send(\"Some error occured!\");\n  }\n};\n\n\n//THIS WILL DELETE THE DATABASE , DONT USE \n\n//DONT USE AT ALL\n\nexport const deleteAll = async(req,res)=>{\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(404).json({ errors: errors.array() });\n  }\n  try {\n    await Consumable.deleteMany({});\n    await Equipment.deleteMany({});\n    await User.deleteMany({role:0})\n\n  } catch (err) {\n    console.error(err.message);\n    res.status(500).send(\"Some error occured!\");\n  }\n}\n\n// localhost:5000/api/budget/fetchsummary?year=2023",
      "language": "javascript",
      "size": 15124,
      "lastModified": "2025-08-01T17:21:07.917Z"
    },
    {
      "path": "server/controllers/userControllers.js",
      "content": "import User from \"../../models/User.js\";\nimport Equipment from \"../../models/equipment.js\";\nimport Consumable from \"../../models/consumable.js\";\nimport jwt from \"jsonwebtoken\";\nimport { validationResult } from \"express-validator\";\nimport bcrypt from \"bcryptjs\";\nimport authMiddleware from \"../../middlewares/authMiddleware.js\";\n\nconst JWT_SECRET = process.env.JWT_SECRET;\n\nexport const login = async (req, res) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({ errors: errors.array() });\n  }\n  const { username, password } = req.body;\n  try {\n    let user = await User.findOne({ username });\n    if (!user) {\n      return res\n        .status(400)\n        .json({ error: \"Please try to login with correct credentials.\" });\n    }\n    const passwordCheck = await bcrypt.compare(password, user.password);\n    if (!passwordCheck)\n      return res\n        .status(400)\n        .json({ error: \"Please try to login with correct credentials.\" });\n    const { name, role } = user;\n    const data = { user: { id: user.id } };\n    const authToken = jwt.sign(data, JWT_SECRET);\n    res.json({ user: { username, name, role }, authToken });\n  } catch (err) {\n    console.error(err.message);\n    res.status(500).send(\"Some error occured!\");\n  }\n};\n\n\n//======================================================================\n//this is useful in creating the dept and not in adding entry\n\n//side note-- in front end give options of equipment budget category and also array_name in both, DON'T take direct user input\n\n//sample request --\n// \"department\":\"CSE\",\n// \"budget\":9000000,\n// \"expenditure\":0,\n// \"year\":2022,\n// \"indents_process\":[],\n// \"direct_purchase\":[],\n// \"indent_pay_done\":[]\n  \n//=========\n//adding entry in consumable\n//the entry also adds to the expenditure",
      "language": "javascript",
      "size": 1812,
      "lastModified": "2025-07-31T20:01:24.113Z"
    },
    {
      "path": "server/db.js",
      "content": "// db.js\nimport mongoose from \"mongoose\";\nimport dotenv from \"dotenv\";\ndotenv.config({ path: \"./config.env\" });\n\nconst DATABASE = process.env.DATABASE;\n\nconst connectToMongo = () => {\n  mongoose\n    .connect(DATABASE)\n    .then(() => {\n      console.log(`MongoDB has been connected successfully.`);\n    })\n    .catch((err) => {\n      console.log(`There is problem in connecting to database. ${err}`);\n    });\n};\n\nexport default connectToMongo;\n",
      "language": "javascript",
      "size": 444,
      "lastModified": "2025-07-29T15:19:07.268Z"
    },
    {
      "path": "server/index.js",
      "content": "// index.js\nimport express from \"express\";\nimport connectToMongo from \"./db.js\";\nimport cors from \"cors\";\nimport budgetRoutes from \"./routes/budgetRoutes.js\";\nimport adminRoutes from \"./routes/adminRoutes.js\";\n\nconst port = process.env.PORT;\nconst host = process.env.HOST;\n\nconst app = express();\napp.use(cors());\napp.use(express.json());\nconnectToMongo();\n\napp.use(\"/api/user\", userRoutes);\napp.use(\"/api/budget\", budgetRoutes);\napp.use(\"/api/admin\", adminRoutes);\n\n\napp.listen(port, () => {\n  console.log(\n    `IITI Budget Website backend is listening at https://${host}:${port}`\n  );\n});\n",
      "language": "javascript",
      "size": 591,
      "lastModified": "2025-07-31T19:52:23.109Z"
    },
    {
      "path": "server/models/User.js",
      "content": "import mongoose, { Schema } from \"mongoose\";\n\nconst UserSchema = new Schema({\n  username: {\n    type: String,\n    required: true,\n    uniquej: true,\n  },\n  name: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  role: {\n    type: Number,\n    enum: [0, 1, 2],\n  },\n  date: {\n    type: Date,\n    default: Date.now,\n  },\n});\nconst User = mongoose.model(\"user\", UserSchema);\nexport default User;",
      "language": "javascript",
      "size": 463,
      "lastModified": "2025-07-29T15:41:14.528Z"
    },
    {
      "path": "server/models/consumable.js",
      "content": "import mongoose, { Schema } from \"mongoose\";\n\nconst ConsumableSchema = new Schema({\n  username: String,\n  department: String,\n  budget: Number,\n  expenditure: { type: Number, default: 0 },\n  in_process:{type:Number,default: 0},\n  year: { type: Number, default: () => new Date().getFullYear() },\n  indents_process: [\n    {\n      entry_date: { type: Date, default: Date.now() },\n      particulars: String,\n      indenter: String,\n      indent_no: { type: Number },\n      po_no: Number,\n      indent_amount: Number,\n      amount: Number,\n      account_head: Number,\n      active: { type: Boolean, default: true },\n    },\n  ],\n  direct_purchase: [\n    {\n      entry_date: { type: Date, default: Date.now() },\n      particulars: String,\n      indenter: String,\n      indent_no: { type: Number },\n      po_no: Number,\n      indent_amount: Number,\n       amount: {type: Number,default:0},\n      remark: String,\n      active: { type: Boolean, default: true },\n    },\n  ],\n  indent_pay_done: [\n    {\n      entry_date: { type: Date, default: Date.now() },\n      particulars: String,\n      indenter: String,\n      indent_no: { type: Number },\n      po_no: Number,\n      indent_amount: Number,\n      amount: Number,\n      account_head: String,\n      active: { type: Boolean, default: true },\n    },\n  ],\n});\n\nconst Consumable = mongoose.model(\"consumable\", ConsumableSchema);\n\nexport default Consumable;",
      "language": "javascript",
      "size": 1391,
      "lastModified": "2025-08-01T17:22:21.287Z"
    },
    {
      "path": "server/models/equipment.js",
      "content": "import mongoose, { Schema } from \"mongoose\";\n\nconst EquipmentSchema = new Schema({\n  username: String,\n  department: String,\n  budget: { type: Number },\n  expenditure: { type: Number, default: 0 },\n  year: { type: Date, default: () => new Date().getFullYear() },\n  indents_process: [\n    {\n      entry_date: { type: Date, default: Date.now()},\n      particulars: String,\n      indenter: String,\n      indent_no: { type: Number },\n      po_no: Number,\n      indent_amount: Number,\n      amount: Number,\n      nameofparty: String,\n      category: String,\n      active: Boolean,\n    },\n  ],\n direct_purchase: [\n    {\n      entry_date: { type: Date, default: Date.now() },\n      particulars: String,\n      indenter: String,\n      indent_no: { type: Number },\n      po_no: Number,\n      indent_amount: Number,\n      amount: Number,\n      nameofparty: String,\n      category: String,\n      active: Boolean,\n    },\n  ],\n  indent_pay_done: [\n    {\n      entry_date: { type: Date, default: Date.now() },\n      particulars: String,\n      indenter: String,\n      indent_no: { type: Number },\n      po_no: Number,\n      indent_amount: Number,\n      amount: Number,\n      nameofparty: String,\n      category: String,\n      active: Boolean,\n    },\n  ],\n});\n\nconst Equipment = mongoose.model(\"equipment\", EquipmentSchema);\n\nexport default Equipment;",
      "language": "javascript",
      "size": 1334,
      "lastModified": "2025-08-01T17:03:12.960Z"
    },
    {
      "path": "server/package.json",
      "content": "{\n  \"name\": \"server\",\n  \"version\": \"1.0.0\",\n  \"description\": \" Budget Allocation System\",\n  \"main\": \"index.js\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"start\": \"nodemon app.js\"\n  },\n  \"author\": \"Swaraj Khair\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"bcryptjs\": \"^2.4.3\",\n    \"body-parser\": \"^1.20.2\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.4.5\",\n    \"express\": \"^4.19.1\",\n    \"express-validator\": \"^7.0.1\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^8.1.0\",\n    \"nodemailer\": \"^6.9.13\",\n    \"nodemon\": \"^3.1.0\"\n  }\n}",
      "language": "json",
      "size": 587,
      "lastModified": "2025-07-29T15:43:42.132Z"
    },
    {
      "path": "server/routes/adminRoutes.js",
      "content": "import express from \"express\";\nimport { body } from \"express-validator\";\nimport { createUser, addDept } from \"../controllers/adminController.js\";\nconst router = express.Router();\n\nrouter.post(\n  \"/createuser\",\n  [\n    body(\"username\", \"Username should be atleast 2 characters long.\").isLength({\n      min: 2,\n    }),\n    body(\"name\", \"Name should be atleast 3 characters long. \").isLength({\n      min: 5,\n    }),\n    body(\"password\", \"Password should be atleast 6 characters long.\").isLength({\n      min: 6,\n    }),\n  ],\n  createUser\n);\n\nrouter.post(\n  \"/adddept\",\n  [\n    body(\"username\", \"Username should be atleast 2 characters long.\").isLength({\n      min: 2,\n    }),\n    body(\"name\", \"Name should be atleast 3 characters long. \").isLength({\n      min: 5,\n    }),\n    body(\"password\", \"Password should be atleast 6 characters long.\").isLength({\n      min: 6,\n    }),\n  ],\n  addDept\n);\n\nexport default router;",
      "language": "javascript",
      "size": 912,
      "lastModified": "2025-07-31T20:01:35.394Z"
    },
    {
      "path": "server/routes/budgetRoutes.js",
      "content": "import express from \"express\";\nimport { fetchSummary, addEntry, fetchTable } from \"../controllers/budgetController.js\";\n\nconst router = express.Router();\n\n  router.post(\n     \"/addentry\",\n   addEntry\n  );\n  \n  router.get(\n    \"/fetchtable\",\n  \n    fetchTable\n  );\n\n  router.get(\n    \"/fetchsummary\",\n    fetchSummary\n  )\n\nexport default router;",
      "language": "javascript",
      "size": 344,
      "lastModified": "2025-08-01T16:53:02.259Z"
    },
    {
      "path": "server/routes/userRoutes.js",
      "content": "import express from \"express\";\nimport { login} from \"../server/controllers/userController.js\";\nimport { body } from \"express-validator\";\n\nconst router = express.Router();\n\nrouter.post(\n  \"/login\",\n  [\n    body(\"username\", \"Username should not be empty!\").exists(),\n    body(\"password\", \"Password should not be empty!\").exists(),\n  ],\n  login\n);\n\n\nexport default router;",
      "language": "javascript",
      "size": 369,
      "lastModified": "2025-07-31T20:03:05.069Z"
    }
  ]
}